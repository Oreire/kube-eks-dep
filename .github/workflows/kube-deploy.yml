name: Deploy and Clean EKS Infrastructure

on:
  push:
    branches: [main]

jobs:
  deploy-vpc:
    name: 🌐 Deploy VPC
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: KubeNet

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v3

      - name: 🔐 Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: 🧱 Init VPC
        working-directory: KubeNet
        run: terraform init

      - name: 📋 Plan VPC
        working-directory: KubeNet
        run: terraform plan -out=tfplan 

      - name: ✅ Apply VPC
        working-directory: KubeNet
        run: terraform apply -auto-approve tfplan

  deploy-eks:
    name: ☸️ Deploy EKS
    needs: deploy-vpc
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: EKS

    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - uses: hashicorp/setup-terraform@v2
      - name: 🧱 Init EKS
        working-directory: EKS
        run: terraform init
      - name: 📋 Plan EKS
        working-directory: EKS
        run: terraform plan -out=tfplan
      - name: ✅ Apply EKS
        working-directory: EKS
        run: terraform apply -auto-approve tfplan

  verify-eks:
    name: 🔍 Verify Cluster
    needs: deploy-eks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: 🛠️ Install kubectl
      run: |
       KUBECTL_VERSION=$(curl -s https://dl.k8s.io/release/stable.txt)
       curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
       chmod +x kubectl && sudo mv kubectl /usr/local/bin/


    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: 📡 Configure kubeconfig
      run: aws eks update-kubeconfig --region eu-west-2 --name laredo-cluster

    - name: 👀 Get Nodes
      run: kubectl get nodes

    - name: 📂 List Namespaces
      run: kubectl get namespaces



  # deploy-app:
  #   name: 🚀 Deploy Application
  #   needs: deploy-eks
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: KubeApp

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-west-2
  #     - uses: hashicorp/setup-terraform@v2
  #     - name: 🧱 Init Application
  #       working-directory: KubeApp
  #       run: terraform init
  #     - name: 📋 Plan Application Deployment
  #       working-directory: KubeApp
  #       run: terraform plan -out=tfplan
  #     - name: ✅ Apply Application Deployment
  #       working-directory: KubeApp
  #       run: terraform apply -auto-approve tfplan

  # clean-up:
  #  name: 🧹 Clean Up All Resources
  #  runs-on: ubuntu-latest
  #  needs: [deploy-eks, verify-eks]

  #  steps:
  #   - uses: actions/checkout@v3

  #   - uses: aws-actions/configure-aws-credentials@v2
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: eu-west-2

  #   - uses: hashicorp/setup-terraform@v2

  #   - name: ⏳ Wait 10 minutes before cleanup
  #     run: sleep 600

  #   - name: 🧱 Init Terraform
  #     run: terraform init

  #   - name: 📋 Plan Destroy Everything
  #     run: terraform plan -destroy -out=tfplan

  #   - name: ✅ Apply Full Destroy
  #     run: terraform apply -auto-approve tfplan

